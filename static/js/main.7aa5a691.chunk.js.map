{"version":3,"sources":["components/Header.js","components/ElementsList.js","components/ElementsCreator.js","components/Comments.js","App.js","serviceWorker.js","index.js"],"names":["labels","Header","page","className","to","content","headerContent","ElementsList","useState","elements","setElements","comments","setComments","useEffect","itemsList","localStorage","getItem","JSON","parse","commentList","clickComment","e","setItem","target","id","deleteElement","element","parentNode","firstChild","parentElement","items","forEach","item","key","splice","stringify","remove","elementsList","map","index","commentsList","filter","comment","commentID","onClick","text","length","ElementsCreator","setItems","onSubmit","onChange","value","Date","now","placeholder","type","Comments","setComment","author","App","basename","process","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7aa5a691.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst labels = {\r\n  mainTitle: \"Sayer\",\r\n  newItemTitle: \"Create new item\",\r\n  commentsTitle: \"First item with customized long title\",\r\n  mainSubTitle: \"World's most used time waster\"\r\n}\r\n\r\nconst headerContent = (page)=>{\r\n  let content = ''\r\n  switch(page){\r\n    case 'comments':\r\n      content = \r\n          <h5>{labels.commentsTitle}</h5>\r\n      break;\r\n    case 'newitem':\r\n      content = \r\n          <h5>{labels.newItemTitle}</h5>\r\n      break;\r\n    default:\r\n      content = \r\n        <>\r\n          <h4>{labels.mainTitle}</h4>\r\n          <p>{labels.mainSubTitle}</p>\r\n        </>\r\n      break;\r\n  }\r\n  return content;\r\n}\r\n\r\n\r\n\r\nconst Header = ({ page=\"\" }) => {\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className={`container ${page}`}>\r\n        {\r\n          page !== \"main\" &&\r\n          <Link to='/' className=\"brand-logo\">&larr;</Link>\r\n        }\r\n        {headerContent(page)}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\nconst ElementsList = () => {\r\n  const [elements, setElements] = useState([]);\r\n  const [comments, setComments] = useState([]);\r\n  useEffect(() => {\r\n    const itemsList = localStorage.getItem('elements') ? JSON.parse(localStorage.getItem('elements')) : [];\r\n    setElements(itemsList);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const commentList = localStorage.getItem('comments') ? JSON.parse(localStorage.getItem('comments')) : [];\r\n    setComments(commentList);\r\n  }, [])\r\n\r\n  const clickComment = (e) => {\r\n    localStorage.setItem(\"page\", \"comments\");\r\n    localStorage.setItem(\"commentID\", e.target.id);\r\n  }\r\n  const addItemClick = (e) => {\r\n    localStorage.setItem(\"page\", e.target.id)\r\n  }\r\n\r\n  const deleteElement = (e) => {\r\n    let element = e.target.parentNode.firstChild;\r\n    let parentElement = e.target.parentNode;\r\n    let items = elements;\r\n    items.forEach((item) => {\r\n      if (+element.id === item.key) {\r\n        items.splice(item, 1)\r\n      }\r\n    })\r\n    setElements(items);\r\n    localStorage.setItem(\"elements\", JSON.stringify(items))\r\n    parentElement.remove();\r\n  }\r\n\r\n  const elementsList = elements.map((item, index) => {\r\n    const commentsList = comments.filter(comment => +comment.commentID === item.key)\r\n    return (\r\n      <div key={index} className=\"createdElements\">\r\n        <Link to='/comments' className=\"collection-item\" onClick={clickComment} id={item.key}>\r\n          {item.text}\r\n          <div className=\"commentsCount\">{commentsList.length}</div>\r\n        </Link>\r\n        <div className=\"btn delete waves-effect waves-light\" onClick={deleteElement}>&#128465;\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n  return (\r\n    <>\r\n    <Header page='main'/>\r\n    <div>\r\n      <div id=\"elementsList\" className=\"collection\">{elementsList}</div>\r\n      <Link to='/newitem' className=\"btn-floating btn-large scale-transition\" id='newitem' onClick={addItemClick}>+</Link>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ElementsList;","import React, { useState, useEffect } from \"react\";\r\nimport Header from './Header';\r\n\r\nconst ElementsCreator = () => {\r\n  const [item, setItem] = useState({});\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const items = localStorage.getItem('elements') ? JSON.parse(localStorage.getItem('elements')) : [];\r\n    setItems(items);\r\n  }, [])\r\n  const handleSubmit = () => {\r\n    const elements = [...items, item]\r\n    localStorage.setItem(\"elements\", JSON.stringify(elements))\r\n  }\r\n  return (\r\n    <>\r\n      <Header page='newitem'/>\r\n      <div className=\"elementsCreatorMain\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input id=\"elementInput\" onChange={e => setItem({ text: e.target.value, key: Date.now() })}\r\n            placeholder=\"New item title...\">\r\n          </input>\r\n          <button type=\"submit\">add</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ElementsCreator;","import React, { useEffect, useState, Fragment } from 'react';\r\nimport Header from './Header';\r\n\r\nconst Comments = () => {\r\n  const [comments, setComments] = useState([])\r\n  const [comment, setComment] = useState({});\r\n\r\n  useEffect(() => {\r\n    const comments = localStorage.getItem('comments') ? JSON.parse(localStorage.getItem('comments')) : [];\r\n    setComments(comments);\r\n  }, [])\r\n\r\n  const handleSubmit = () => {\r\n    const items = [...comments, comment];\r\n    localStorage.setItem(\"comments\", JSON.stringify(items));\r\n  }\r\n\r\n  const commentsList = comments.map((comment, index) => {\r\n    return (\r\n      <Fragment key={index}>\r\n        {localStorage.commentID === comment.commentID &&\r\n          <div className=\"card horizontal\" author={comment.commentID}>{comment.text}</div>\r\n        }\r\n      </Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Header page='comments'/>\r\n      <div className='comments'>\r\n        {commentsList}\r\n        <div className=\"commentsForm\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              id=\"commentInput\"\r\n              onChange={e => setComment({\r\n                text: e.target.value,\r\n                key: Date.now(),\r\n                commentID: localStorage.commentID\r\n              })\r\n              }\r\n              placeholder=\"New comment goes here...\"\r\n            >\r\n            </input>\r\n            <button id=\"commentButton\" type=\"submit\">></button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport ElementsList from './components/ElementsList'\r\nimport ElementsCreator from './components/ElementsCreator'\r\nimport Comments from './components/Comments'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path={'/'} component={ElementsList} />\r\n            <Route path='/newitem' component={ElementsCreator} />\r\n            <Route path='/comments' component={Comments} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}